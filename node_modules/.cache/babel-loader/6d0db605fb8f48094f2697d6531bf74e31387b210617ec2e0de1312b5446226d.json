{"ast":null,"code":"var _jsxFileName = \"/workspaces/minf/src/components/pages/PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = () => {\n  _s();\n  const initialState = {\n    title: \"\",\n    coverimage: \"\",\n    images: [],\n    description: \"\"\n  };\n  const [formData, setFormData] = useState(initialState);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log(\"Form data before submission:\", formData);\n      const response = await axios.post(\"http://localhost:3000/v1/api/featured/news\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Response after form submission:\", response);\n      if (response.status !== 201) {\n        throw new Error(\"Failed to create featured news article\");\n      }\n\n      // Reset form after successful submission\n      setFormData(initialState);\n      alert(\"Featured news article created successfully\");\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n      alert(\"Failed to create featured news article\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        value: formData.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Cover Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"coverimage\",\n        name: \"coverimage\",\n        value: formData.coverimage,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"images\",\n        children: \"Images (comma-separated URLs):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"images\",\n        name: \"images\",\n        value: formData.images.join(\",\"),\n        onChange: e => setFormData({\n          ...formData,\n          images: e.target.value.split(\",\")\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"T4yXvXp9ZUeg/I2tM6GijGKf8Os=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PostForm","_s","initialState","title","coverimage","images","description","formData","setFormData","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","response","post","headers","status","Error","alert","error","message","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","join","split","_c","$RefreshReg$"],"sources":["/workspaces/minf/src/components/pages/PostForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst PostForm = () => {\n\n    const initialState = {\n        title: \"\",\n        coverimage: \"\",\n        images: [],\n        description: \"\",\n      }\n\n  const [formData, setFormData] = useState(initialState);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      console.log(\"Form data before submission:\", formData);\n\n      const response = await axios.post(\n        \"http://localhost:3000/v1/api/featured/news\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      console.log(\"Response after form submission:\", response);\n\n      if (response.status !== 201) {\n        throw new Error(\"Failed to create featured news article\");\n      }\n\n      // Reset form after successful submission\n      setFormData(initialState);\n\n      alert(\"Featured news article created successfully\");\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n      alert(\"Failed to create featured news article\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={formData.title}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"title\">Cover Image:</label>\n        <input\n          type=\"text\"\n          id=\"coverimage\"\n          name=\"coverimage\"\n          value={formData.coverimage}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"images\">Images (comma-separated URLs):</label>\n        <input\n          type=\"text\"\n          id=\"images\"\n          name=\"images\"\n          value={formData.images.join(\",\")}\n          onChange={(e) =>\n            setFormData({ ...formData, images: e.target.value.split(\",\") })\n          }\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"description\">Description:</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n          required\n        ></textarea>\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default PostForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAMC,YAAY,GAAG;IACjBC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE;EACf,CAAC;EAEL,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACM,YAAY,CAAC;EAEtD,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCL,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACI,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAGD,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEV,QAAQ,CAAC;MAErD,MAAMW,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAC/B,4CAA4C,EAC5CZ,QAAQ,EACR;QACEa,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAEDJ,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEC,QAAQ,CAAC;MAExD,IAAIA,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;MAC3D;;MAEA;MACAd,WAAW,CAACN,YAAY,CAAC;MAEzBqB,KAAK,CAAC,4CAA4C,CAAC;IACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;MACtCF,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACExB,OAAA;IAAM2B,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAC3B5B,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAO6B,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCjC,OAAA;QACEkC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,OAAO;QACVvB,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEL,QAAQ,CAACJ,KAAM;QACtBgC,QAAQ,EAAE1B,YAAa;QACvB2B,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjC,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAO6B,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3CjC,OAAA;QACEkC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,YAAY;QACfvB,IAAI,EAAC,YAAY;QACjBC,KAAK,EAAEL,QAAQ,CAACH,UAAW;QAC3B+B,QAAQ,EAAE1B,YAAa;QACvB2B,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjC,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAO6B,OAAO,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAA8B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9DjC,OAAA;QACEkC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,QAAQ;QACXvB,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAEL,QAAQ,CAACF,MAAM,CAACgC,IAAI,CAAC,GAAG,CAAE;QACjCF,QAAQ,EAAGzB,CAAC,IACVF,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEF,MAAM,EAAEK,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC0B,KAAK,CAAC,GAAG;QAAE,CAAC,CAC/D;QACDF,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjC,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAO6B,OAAO,EAAC,aAAa;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjDjC,OAAA;QACEmC,EAAE,EAAC,aAAa;QAChBvB,IAAI,EAAC,aAAa;QAClBC,KAAK,EAAEL,QAAQ,CAACD,WAAY;QAC5B6B,QAAQ,EAAE1B,YAAa;QACvB2B,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNjC,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAC/B,EAAA,CAtGID,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AAwGd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}